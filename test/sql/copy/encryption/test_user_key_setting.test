# name: test/sql/copy/encryption/test_user_key_setting.test
# group: [encryption]

require noforcestorage

require skip_reload

require tpch

statement ok
PRAGMA enable_verification

statement error
SET default_user_key = '';
----
Binder Error: Not a valid key. A key cannot be empty

statement ok
SET default_user_key = 'asdf'

statement ok
ATTACH '__TEST_DIR__/encrypted.duckdb' as encrypted

statement ok
ATTACH '__TEST_DIR__/unencrypted.duckdb' as unencrypted

statement ok
USE unencrypted

statement ok
CALL dbgen(sf=0.01)

statement ok
USE encrypted

statement ok
CALL dbgen(sf=0.01)

statement ok
DETACH unencrypted

statement ok
USE memory

statement ok
DETACH encrypted

statement ok
SET default_user_key = 'xxxx'

statement error
ATTACH '__TEST_DIR__/encrypted.duckdb' as encrypted;
----
IO Error: Wrong encryption key used to open the database file

statement error
ATTACH '__TEST_DIR__/unencrypted.duckdb' as unencrypted;
----

statement ok
RESET default_user_key

statement ok
ATTACH '__TEST_DIR__/unencrypted.duckdb' as unencrypted;

query I
SELECT l_suppkey FROM unencrypted.lineitem limit 10;
----
93
75
38
48
23
10
33
19
70
60

statement ok
SET default_user_key = 'asdf'

statement ok
ATTACH '__TEST_DIR__/encrypted.duckdb' as encrypted;

query I
SELECT l_suppkey FROM encrypted.lineitem limit 10;
----
93
75
38
48
23
10
33
19
70
60

statement ok
DETACH encrypted

statement error
ATTACH '__TEST_DIR__/encrypted.duckdb' as encrypted (ENCRYPTION_KEY xxxx);
----
IO Error: Wrong encryption key used to open the database file

statement ok
ATTACH '__TEST_DIR__/encrypted.duckdb' as encrypted (ENCRYPTION_KEY asdf);